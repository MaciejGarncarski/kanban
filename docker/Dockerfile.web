# syntax=docker.io/docker/dockerfile:1

ARG NODE_VERSION=24.10.0
ARG PNPM_VERSION=10.18.2

# -----------------------------
# Base image with Node + pnpm
# -----------------------------
FROM node:${NODE_VERSION}-alpine AS base
RUN corepack enable && corepack prepare pnpm@${PNPM_VERSION} --activate
WORKDIR /app

# -----------------------------
# Install dependencies & build
# -----------------------------
FROM base AS builder
# Install OS deps
RUN apk add --no-cache libc6-compat

# Copy all files (including workspace packages)
COPY . .

# Install dependencies and build the web package
RUN pnpm install --frozen-lockfile
RUN pnpm --filter=web build

# -----------------------------
# Production image
# -----------------------------
FROM node:${NODE_VERSION}-alpine AS runner
WORKDIR /app

# Set production env
ENV NODE_ENV=production
ENV PORT=3000

# Create non-root user
RUN addgroup -g 1001 -S nodejs && adduser -S nextjs -u 1001

# Copy only what we need from builder
COPY --from=builder /app/web/public ./web/public
COPY --from=builder --chown=nextjs:nodejs /app/web/.next/standalone ./ 
COPY --from=builder --chown=nextjs:nodejs /app/web/.next/static ./web/.next/static

USER nextjs

EXPOSE 3000
CMD ["node", "web/server.js"]
